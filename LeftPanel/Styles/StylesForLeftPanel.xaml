<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    >
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/ProcessInnovator.Infrastructure;component/Styles/Brushes.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <LinearGradientBrush x:Key="ClickButtonColor" StartPoint="0,0">
        <GradientStop Color="White" Offset="0.0" />
        <GradientStop Color="#FF3E78B3" Offset="1.0" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="NotClickButtonColor" StartPoint="0,0">
        <GradientStop Color="White" Offset="0.0" />
        <GradientStop Color="LightGray" Offset="1.0" />
    </LinearGradientBrush>

    <Style x:Key="ModeButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource NotClickButtonColor}"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Height" Value="28.5"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.3" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DesignButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ModeButtonStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsInDesignMode}" Value="True">
                <Setter Property="Background" Value="{StaticResource ClickButtonColor}"/>
                <Setter Property="Foreground" Value="White"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SimulateButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ModeButtonStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsInSimulateMode}" Value="True">
                <Setter Property="Background" Value="{StaticResource ClickButtonColor}"/>
                <Setter Property="Foreground" Value="White"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="AnalyzeButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource ModeButtonStyle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsInAnalyzeMode}" Value="True">
                <Setter Property="Background" Value="{StaticResource ClickButtonColor}"/>
                <Setter Property="Foreground" Value="White"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SimulationComboBoxStyle" TargetType="ComboBox">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>

    <ControlTemplate x:Key="ExpanderToggleButton" TargetType="ToggleButton">
        <Border
            Name="Border" 
            CornerRadius="2,0,0,0"
            Background="Transparent"
            BorderBrush="{StaticResource NormalBorderBrush}"
            BorderThickness="0,0,0,0">
            <Path 
                Name="Arrow"
                Fill="{StaticResource GlyphBrush}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Data="M 0 0 L 4 4 L 8 0 Z"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background"
                        Value="{StaticResource DarkBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="Border" Property="Background"
                        Value="{StaticResource PressedBrush}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="Arrow" Property="Data"
                        Value="M 0 4 L 4 0 L 8 4 Z" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background"
                        Value="{StaticResource DisabledBackgroundBrush}" />
                <Setter TargetName="Border" Property="BorderBrush"
                        Value="{StaticResource DisabledBorderBrush}" />
                <Setter Property="Foreground"
                        Value="{StaticResource DisabledForegroundBrush}"/>
                <Setter TargetName="Arrow" Property="Fill"
                        Value="{StaticResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style TargetType="Expander" x:Key="ExpanderStyle">
        <Setter Property="FontFamily" Value="SegoeUI"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="#4C4C4C"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Name="ContentRow" Height="0"/>
                        </Grid.RowDefinitions>
                        <Border Name="Border" Grid.Row="0"                               
                                Background="{StaticResource LightBrush}"
                                BorderBrush="{StaticResource NormalBorderBrush}"
                                BorderThickness="1" 
                                CornerRadius="2,2,0,0" >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <ToggleButton IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      OverridesDefaultStyle="True" 
                                      Template="{StaticResource ExpanderToggleButton}" 
                                      Background="{StaticResource NormalBrush}" />
                                <ContentPresenter Grid.Column="1" Margin="4" ContentSource="Header" RecognizesAccessKey="True" />
                            </Grid>
                        </Border>
                        <Border Name="Content" Grid.Row="1" 
                                Background="{StaticResource WindowBackgroundBrush}"
                                BorderBrush="{StaticResource SolidBorderBrush}" 
                                BorderThickness="1,0,1,1" 
                                CornerRadius="0,0,2,2" >
                            <ContentPresenter Margin="4" />
                        </Border>
                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ContentRow" Property="Height"
                                    Value="{Binding ElementName=Content, Path=DesiredHeight}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background"
                                    Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush"
                                    Value="{StaticResource DisabledBorderBrush}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>